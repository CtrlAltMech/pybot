
v0.4
====

  Config now written in JSON. To sum up recent changes in the last week, since there have been a few:
  * bot is now multithreaded. He joins n-number of specified networks in the config file, and joins channels on a 
  per-network basis.
 
 Issues:
 -------
  * IRC pass and DB pass must be specified in each network block, as each thread is really only concerned with 
  information relevant to itself; specific to its own network. This is probably not how the bot would be used;
  it's likely he'd be running on one machine, with one DB password. IRC pass per-network makes sense, though.
  
  * Code still very much needs to be cleaned up and restructured. 

  * bot class still passing only PRIVMSGs to botbrain -- for events to be really useful (see Future), JOINS, PARTS,
  etc would need to get passed as well.

 Future:
 -------
  * Events and module handling. For modules to be useful (and usable) they'd have to be able to register, or subscribe,
  to interesting (or uninteresting, I'm not judging you) 'events' as determined by the botbrain. The bot needs to
  merely pass lines received into botbrain, where logic is performed. Both events and how to load modules (as well 
  as module conventions) need to be defined.

v0.5.1
======

  Modules and events now work. There are a few miscellaneous unrelated-to-modules-and-events fixes in place, as well;
  * a more graceful handling of DEBUG. It is now passed into the bot as set by the commandline flag -d.
  * added message number handling to the bot. this should allow for a much more robust understanding of exactly what the server is sending us.
  * fix for confman -- there was a bug introduced when I switched to os.path.abspath and how I was passing in the default path to confman. os.path.expanduser fixes it (~ was being prepended to the current absolute path). This now expands ~ out to /home/<username>.
  
  * A note to module authors, and tying to events: drop your module in modules/, then define an event in bot.py. In your module, you simple determine what 'type' of event to subscribe to. When that event is triggered, the event will notify all modules that have subscribed to it.
 Issues:
 -------
  * IRC pass and DB pass must be specified in each network block, as each thread is really only concerned with 
  information relevant to itself; specific to its own network. This is probably not how the bot would be used;
  it's likely he'd be running on one machine, with one DB password. IRC pass per-network makes sense, though.
  
  * Code still very much needs to be cleaned up and restructured. 

  * bot class still passing only PRIVMSGs to botbrain -- for events to be really useful (see Future), JOINS, PARTS,
  etc would need to get passed as well. --WONTFIX - CORE ADDITIONAL FUNCTIONALITY MOVED TO MODULES --


v0.6
======

  Features: 
    * Dynamic module loading and unloading, and dynamic event creation are add.  --DONE--
    * setup.sh generates mysql commands to create database and add user for the bot to log in as.
    * Dynamic help and some more framework additions to modules. help.py module checks for every module's field 'help' and will display that if available.


  Bugs fixed:
    DB respects username and password and db name from configuration file.

v0.6.1
======
  ** This version is incompatible with previous versions, due to an additional argument being passed to modules (a convenience 'say' function). **
  
v0.6.2
======
  Features:
    * BaseModule, allowing modules to inherit from it and have it do all the boilerplate on the default __init__, and doing any additional work they need in a post_init function.

v0.6.5
======
  Fixes the keyboard interrupt in debug mode issue.

v0.7.0
======
  Fixes the not reconnecting upon disconnect issue. 

  Features
    * Change logger functionality. Logger.write() now takes an additional (optional) argument for nickname, to distinguish logfiles.

v0.7.2
======
  Fixes some inconsistency in botbrain (which should be removed soon).

  Features:
    * Adds sqlite functionality (yay!)
    * DB type is set by __pybot_conf key in the conf file. Valid types are "mysql" and "sqlite".

v0.8.0
======
  Add ability to write simple functions in modules/snippets and register a command with a new decorator!

  Features:
    * Commands decorator in util.py (@commands(".somecommand"))
    * Entire bot now operates on unicode everything.
    * Runs on Windows. No backgrounding, though.
    
  Bugfixes:
    * Fixes a few bugs in modules now that the bot is all unicode internally.

v0.8.5
======
  Add 'seen' module, which does not as yet write out to the DB. Allows for .seen <nick> commands, to tell the user when the specified nick was last seen active in chat.
